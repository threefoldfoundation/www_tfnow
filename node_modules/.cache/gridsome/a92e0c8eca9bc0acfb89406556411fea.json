{"remainingRequest":"/root/tf-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/tf-now/src/components/ToggleDarkMode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/tf-now/src/components/ToggleDarkMode.vue","mtime":1600249310000},{"path":"/root/tf-now/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/tf-now/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/tf-now/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/tf-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\r\nexport const LIGHTS_OUT = 'lights-out';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isDarkMode: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    handleClick() {\r\n      const hasDarkMode = document.documentElement.hasAttribute(LIGHTS_OUT);\r\n\r\n      // Toggle dark mode on click.\r\n      return this.toggleDarkMode(! hasDarkMode);\r\n    },\r\n\r\n    toggleDarkMode(shouldBeDark) {\r\n      document.documentElement.toggleAttribute(LIGHTS_OUT, shouldBeDark);\r\n\r\n      this.isDarkMode = shouldBeDark;\r\n\r\n      this.writeToStorage(shouldBeDark);\r\n\r\n      return shouldBeDark;\r\n    },\r\n\r\n    detectPrefered() {\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    },\r\n\r\n    hasInStorage() {\r\n      const check = localStorage.getItem(LIGHTS_OUT);\r\n\r\n      return check !== null;\r\n    },\r\n\r\n    writeToStorage(prefersDark) {\r\n      localStorage.setItem(LIGHTS_OUT, prefersDark ? 'true' : 'false');\r\n    },\r\n\r\n    getFromStorage() {\r\n      return localStorage.getItem(LIGHTS_OUT) === 'true' ? true : false;\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.hasInStorage()) {\r\n      this.toggleDarkMode(\r\n        this.getFromStorage()\r\n      );\r\n    } else if (process.isClient && window.matchMedia) {\r\n      this.toggleDarkMode(\r\n        this.detectPrefered()\r\n      );\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["ToggleDarkMode.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToggleDarkMode.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <button @click=\"handleClick\" aria-label=\"Toggle Darkmode\" title=\"Toggle Darkmode\">\r\n    <slot :dark=\"isDarkMode\" />\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nexport const LIGHTS_OUT = 'lights-out';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isDarkMode: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    handleClick() {\r\n      const hasDarkMode = document.documentElement.hasAttribute(LIGHTS_OUT);\r\n\r\n      // Toggle dark mode on click.\r\n      return this.toggleDarkMode(! hasDarkMode);\r\n    },\r\n\r\n    toggleDarkMode(shouldBeDark) {\r\n      document.documentElement.toggleAttribute(LIGHTS_OUT, shouldBeDark);\r\n\r\n      this.isDarkMode = shouldBeDark;\r\n\r\n      this.writeToStorage(shouldBeDark);\r\n\r\n      return shouldBeDark;\r\n    },\r\n\r\n    detectPrefered() {\r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    },\r\n\r\n    hasInStorage() {\r\n      const check = localStorage.getItem(LIGHTS_OUT);\r\n\r\n      return check !== null;\r\n    },\r\n\r\n    writeToStorage(prefersDark) {\r\n      localStorage.setItem(LIGHTS_OUT, prefersDark ? 'true' : 'false');\r\n    },\r\n\r\n    getFromStorage() {\r\n      return localStorage.getItem(LIGHTS_OUT) === 'true' ? true : false;\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.hasInStorage()) {\r\n      this.toggleDarkMode(\r\n        this.getFromStorage()\r\n      );\r\n    } else if (process.isClient && window.matchMedia) {\r\n      this.toggleDarkMode(\r\n        this.detectPrefered()\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}